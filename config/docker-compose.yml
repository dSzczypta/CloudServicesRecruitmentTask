services:
  database:
    build: "../database"
    environment:
      - POSTGRES_DB=${DATABASE_NAME:-cloud_services_db}
      - POSTGRES_USER=${DATABASE_USER:-dj_adm}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-VFg@cDm4tXQL3!2f7}
      - POSTGRES_PORT=${DATABASE_PORT:-5432}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - ${DATABASE_PORT:-5432}
    ports:
      - ${DATABASE_PORT:-5432}:${DATABASE_PORT:-5432}
    command: -p ${DATABASE_PORT:-5432}

  backend:
    environment:
      - DATABASE_ENGINE=${DATABASE_ENGINE:-django.db.backends.postgresql_psycopg2}
      - DATABASE_NAME=${DATABASE_NAME:-cloud_services_db}
      - DATABASE_USER=${DATABASE_USER:-dj_adm}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-VFg@cDm4tXQL3!2f7}
      - DATABASE_HOST=${DATABASE_HOST:-database}
      - DATABASE_PORT=${DATABASE_PORT:-5432}
      - EMAIL_HOST=${EMAIL_HOST:-smtp.gmail.com}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER:-your_email@gmail.com}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD:-your_email_password}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS:-True}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL:-False}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL:-your_email@gmail.com}
    build: ../cloud_services/
    ports:
      - "8000:8000"
    command: /bin/bash -c "python manage.py runserver 0.0.0.0:8000 || tail -F _"
    volumes:
      - ../cloud_services:/cloud_services
    depends_on:
      - database

  redis:
      image: redis:alpine

  celery:
    restart: "no"
    build: ../cloud_services/
    command: "celery -A cloud_services worker -l INFO"
    volumes:
      - ../cloud_services:/cloud_services
    environment:
      - DB_HOST=${DATABASE_HOST:-database}
      - DB_PORT=${DATABASE_PORT:-5432}
      - DB_NAME=${DATABASE_NAME:-cloud_services_db}
      - DB_USER=${DATABASE_USER:-dj_adm}
      - DB_PASS=${DATABASE_PASSWORD:-VFg@cDm4tXQL3!2f7}
      - DATABASE_NAME=${DATABASE_NAME:-cloud_services_db}
      - DATABASE_USER=${DATABASE_USER:-dj_adm}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-VFg@cDm4tXQL3!2f7}
      - DATABASE_HOST=${DATABASE_HOST:-database}
      - DATABASE_PORT=${DATABASE_PORT:-5432}
      - BACKEND_DEBUG=${BACKEND_DEBUG:-True}
      - BACKEND_ADDRESS=${BACKEND_ADDRESS:-0.0.0.0}
      - BACKEND_PORT=${BACKEND_PORT:-8000}
      - EMAIL_HOST=${EMAIL_HOST:-smtp.gmail.com}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER:-your_email@gmail.com}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD:-your_email_password}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS:-True}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL:-False}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL:-your_email@gmail.com}
    depends_on:
      - backend
      - redis

  celery-beat:
    build: ../cloud_services/
    command: "celery -A cloud_services beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - ../cloud_services:/cloud_services
    environment:
      - DB_HOST=${DATABASE_HOST:-database}
      - DB_PORT=${DATABASE_PORT:-5432}
      - DB_NAME=${DATABASE_NAME:-cloud_services_db}
      - DB_USER=${DATABASE_USER:-dj_adm}
      - DB_PASS=${DATABASE_PASSWORD:-VFg@cDm4tXQL3!2f7}
      - DATABASE_NAME=${DATABASE_NAME:-cloud_services_db}
      - DATABASE_USER=${DATABASE_USER:-dj_adm}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-VFg@cDm4tXQL3!2f7}
      - DATABASE_HOST=${DATABASE_HOST:-database}
      - DATABASE_PORT=${DATABASE_PORT:-5432}
      - BACKEND_DEBUG=${BACKEND_DEBUG:-True}
      - BACKEND_ADDRESS=${BACKEND_ADDRESS:-0.0.0.0}
      - BACKEND_PORT=${BACKEND_PORT:-8000}
      - EMAIL_HOST=${EMAIL_HOST:-smtp.gmail.com}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER:-your_email@gmail.com}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD:-your_email_password}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS:-True}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL:-False}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL:-your_email@gmail.com}
    depends_on:
      - database
      - celery
      - redis
      - backend

volumes:
    postgres_data: {}